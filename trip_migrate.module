<?php

/**
 * Implementation of hook_flush_caches().
 */
function trip_migrate_flush_caches() {
  trip_migrate_register_migrations();
}

/**
 * Register all D6->D7 migrations.
 */
function trip_migrate_register_migrations() {

  $common_arguments = array(
    'source_connection' => 'trip',
    'source_version' => 6,
  );

  $arguments = $common_arguments + array(
    'description' => t('Migration of users from Drupal 6'),
    'machine_name' => 'TripUser',
  );

  Migration::registerMigration('DrupalUser6Migration', $arguments['machine_name'],
  $arguments);


 $vocabulary_arguments = array(
  array(
    'description' => t('Migration of Destination terms from Drupal 6'),
    'machine_name' => 'TripTermDestination',
    'source_vocabulary' => '6',
    'destination_vocabulary' => 'tags',
    ),
  );

  $common_vocabulary_arguments = $common_arguments + array(
    'class_name' => 'DrupalTerm6Migration',
    'soft_dependencies' => array('TripUser'),
  );
                             
  foreach ($vocabulary_arguments as $arguments) {
    $arguments += $common_vocabulary_arguments;
    Migration::registerMigration($arguments['class_name'], $arguments['machine_name'], $arguments);
  }


  $node_arguments = array(
    array(
      'class_name' => 'TripForumNodeMigration',
      'description' => t('Migration of article nodes from Drupal 6'),
      'machine_name' => 'TripNodeForum',
      'source_type' => 'trip_forum',
      'destination_type' => 'article',
    ),
  );

  $common_node_arguments = $common_arguments + array(
    'user_migration' => 'TripUser',
);
  
  foreach ($node_arguments as $arguments) {
    $arguments = array_merge_recursive($arguments, $common_node_arguments);
    Migration::registerMigration($arguments['class_name'], $arguments['machine_name'],
    $arguments);
  }


  $comment_arguments = $common_arguments + array(
    'description' => t('Migration of comments from Drupal 6'),
    'machine_name' => 'TripComment',    
    'user_migration' => 'User',
  );

  Migration::registerMigration('TripCommentMigration', $comment_arguments['machine_name'],
  $comment_arguments);

}

/**
 * Implementation of hook_migrate_api().
 */
function trip_migrate_migrate_api() {
  $api = array(
    'api' => 2,
  );
  return $api;
}
